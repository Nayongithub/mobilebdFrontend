[{"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\index.js":"1","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\App.js":"2","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Navbar\\Navbar.js":"4","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Home\\Home.jsx":"5","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Contact\\Contact.jsx":"6","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Store\\Store.jsx":"7","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Forms\\CustomerForm.jsx":"8","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Customer List\\CustomerList.jsx":"9","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\User List\\UserList.jsx":"10","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Forms\\LoginForm.jsx":"11","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Sidebar\\Location.jsx":"12","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\BaseUrl\\BaseUrl.js":"13","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\User List\\EditUser.jsx":"14","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\User List\\AddUser.jsx":"15","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\NotFound.jsx":"16","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Product\\ProductList.jsx":"17","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Product\\AddProduct.jsx":"18"},{"size":669,"mtime":1612207026821,"results":"19","hashOfConfig":"20"},{"size":299,"mtime":1612244448385,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":7655,"mtime":1612781112100,"results":"23","hashOfConfig":"20"},{"size":169,"mtime":1612161871124,"results":"24","hashOfConfig":"20"},{"size":178,"mtime":1612161902633,"results":"25","hashOfConfig":"20"},{"size":159,"mtime":1612175950213,"results":"26","hashOfConfig":"20"},{"size":180,"mtime":1612176890684,"results":"27","hashOfConfig":"20"},{"size":180,"mtime":1612176981261,"results":"28","hashOfConfig":"20"},{"size":5331,"mtime":1613453935043,"results":"29","hashOfConfig":"20"},{"size":171,"mtime":1612176930919,"results":"30","hashOfConfig":"20"},{"size":1289,"mtime":1613457768300,"results":"31","hashOfConfig":"20"},{"size":80,"mtime":1612376167043,"results":"32","hashOfConfig":"20"},{"size":2506,"mtime":1612692237223,"results":"33","hashOfConfig":"20"},{"size":2167,"mtime":1612702793683,"results":"34","hashOfConfig":"20"},{"size":174,"mtime":1612519953772,"results":"35","hashOfConfig":"20"},{"size":2481,"mtime":1613024789648,"results":"36","hashOfConfig":"20"},{"size":15226,"mtime":1612961262989,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"cihtgi",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"41"},"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\index.js",["83","84","85","86"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Navbar from '../src/Components/Navbar/Navbar';\nimport reportWebVitals from './reportWebVitals';\nimport { Container, Row, Col } from 'reactstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n\n  </React.StrictMode>,\n  // ReactDOM.render(element, document.getElementById('root'))\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["87","88"],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\App.js",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Home\\Home.jsx",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Contact\\Contact.jsx",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Store\\Store.jsx",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Forms\\CustomerForm.jsx",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Customer List\\CustomerList.jsx",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\User List\\UserList.jsx",["89","90","91","92","93"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n} from \"reactstrap\";\r\nimport BaseUrl from \"../../../BaseUrl/BaseUrl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaRegEdit, FaTrashAlt, FaSearch } from \"react-icons/fa\";\r\nimport { LoggerFactory } from \"ag-grid-community\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  //------------------------- Pagination-------------------------------\r\n  const [totalPage, setTotalPage] = useState(0);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const pagingItem = () => {\r\n    // e.preventDefault();\r\n\r\n    let total = users.length;\r\n    console.log(\"total\", total);\r\n\r\n    let TotalPage = Math.ceil(total / 5);\r\n    console.log(\"TotalPage\", TotalPage);\r\n    setTotalPage(TotalPage);\r\n\r\n    let PageNumber = pageNumber;\r\n    console.log(\"PageNumber\", PageNumber);\r\n  };\r\n\r\n  const getAllUser = async () => {\r\n    await axios\r\n      .get(`${BaseUrl.base}/api/users/pn/${pageNumber}`)\r\n      .then((res) => {\r\n        setUsers(res.data);\r\n        console.log(\"res.data\",res.data.length);\r\n      })\r\n      .catch((err) => console.error(err));\r\n\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Delete!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n        axios\r\n          .delete(`${BaseUrl.base}/api/users/${id}`)\r\n          .catch((err) => console.error(err));\r\n        let otherUsers = users.filter((res) => res.userID !== id);\r\n        setUsers(otherUsers);\r\n      }\r\n    });\r\n  };\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    if (searchText !== \"\") {\r\n      let searchResult = await axios.get(\r\n        `${BaseUrl.base}/api/SearchPaginationOthers/srch/${searchText}/pn/${pageNumber}`\r\n      );\r\n      setUsers(searchResult.data);\r\n      console.log(\"searchResult\", searchResult.data);\r\n      setSearchText(\"\");\r\n    } else {\r\n      console.log(\"else\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllUser();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <button onClick={pagingItem}>Test</button>\r\n        <h4 className=\"theme-title\">Users List</h4>\r\n        <InputGroup>\r\n          <Input\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n          />\r\n          <InputGroupAddon addonType=\"append\">\r\n            <Button color=\"secondary\" onClick={handleSearch}>\r\n              <FaSearch />\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n        <br />\r\n        <Table bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>SL. No</th>\r\n              <th>User Name</th>\r\n              <th>Password</th>\r\n              <th>Role</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{item.userName}</td>\r\n                <td>{item.password}</td>\r\n                <td>{item.roleID}</td>\r\n                <td>\r\n                  <Link to={`/editUser/${item.userID}`}>\r\n                    <FaRegEdit size=\"1.5em\" color=\"DarkGray\" />\r\n                  </Link>{\" \"}\r\n                  <Button\r\n                    outline\r\n                    color=\"danger\"\r\n                    onClick={() => {\r\n                      handleDelete(item.userID);\r\n                    }}\r\n                  >\r\n                    <FaTrashAlt />\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n      <Pagination aria-label=\"Page navigation example\">\r\n        <PaginationItem>\r\n          <PaginationLink first onClick={() => setPageNumber(1)} />\r\n        </PaginationItem>\r\n        <PaginationItem>\r\n          <PaginationLink\r\n            previous\r\n            onClick={() => setPageNumber(pageNumber - 1)}\r\n          />\r\n        </PaginationItem>\r\n        {new Array(totalPage).fill(\"\").map((el, index) => (\r\n          <PaginationItem\r\n            class={`page-item ${index + 1 === pageNumber ? \"active\" : null}`}\r\n          >\r\n            <PaginationLink\r\n              class=\"page-link\"\r\n              // href=\"!#\"\r\n              onClick={() => setPageNumber(index + 1)}\r\n            >\r\n              {index + 1}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        ))}\r\n        <PaginationItem>\r\n          <PaginationLink next onClick={() => setPageNumber(pageNumber + 1)} />\r\n        </PaginationItem>\r\n        <PaginationItem onClick={() => setPageNumber(totalPage)}>\r\n          <PaginationLink last href=\"#\" />\r\n        </PaginationItem>\r\n      </Pagination>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Forms\\LoginForm.jsx",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Sidebar\\Location.jsx",["94"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Badge, Table } from \"reactstrap\";\r\nimport BaseUrl from \"../../Components/BaseUrl/BaseUrl\";\r\nimport \"../../../src/custom.css\";\r\n\r\nconst Location = () => {\r\n  const [location, setLocation] = useState([]);\r\n  const getAllLocation = async () => {\r\n    await axios\r\n      .get(`${BaseUrl.base}/api/OurLocations`)\r\n      .then((res) => {\r\n        setLocation(res.data);\r\n        console.log(\"data\", res.data);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n  useEffect(() => {\r\n    getAllLocation();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Table bordered hover>\r\n        <thead className=\"theme-bg\">\r\n          <tr>\r\n            <th className=\"text-center theme-title\">Locations</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {location.map((item, index) => (\r\n            <tr key={index}>\r\n              <td>\r\n                <span className=\"text-muted\">{item.locationName}</span>\r\n                <span style={{ float: \"right\" }} className=\"theme-title\">\r\n                  {/* {item.products.count()} */}0\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\BaseUrl\\BaseUrl.js",[],["95","96"],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\User List\\EditUser.jsx",["97"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, FormGroup, Label, Input, Container, Form } from \"reactstrap\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport BaseUrl from \"../../../BaseUrl/BaseUrl\";\r\n\r\nconst EditUser = () => {\r\n  const [data, setData] = useState({\r\n    userName: \"\",\r\n    password: \"\",\r\n    status: false,\r\n  });\r\n  const { userName, password } = data;\r\n  const onInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n\r\n  const loadUser = async () => {\r\n    const result = await axios.get(`${BaseUrl.base}/api/users/${id}`);\r\n    setData(result.data);\r\n  };\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    let url = `${BaseUrl.base}/api/users/${id}`;\r\n    console.log(\"url\", url);\r\n    try {\r\n      await axios.put(`${BaseUrl.base}/api/users/${id}`, data);\r\n      setData({ userName: \"\", password: \"\" });\r\n      Swal.fire({\r\n        position: \"top\",\r\n        icon: \"success\",\r\n        title: \"Update Successfully\",\r\n        showConfirmButton: true,\r\n        timer: 2000,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Form onSubmit={(e) => handleUpdate(e)}>\r\n          <FormGroup>\r\n            <Label for=\"userName\">User Name</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              id=\"userName\"\r\n              value={userName}\r\n              onChange={(e) => onInputChange(e)}\r\n              placeholder=\"user name\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => onInputChange(e)}\r\n              placeholder=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button color=\"success\" type=\"submit\">\r\n              Update\r\n            </Button>{\" \"}\r\n            <Link className=\"ml-2\" style={{ color: \"#FDA66D\" }} to=\"/\">\r\n              Back to home page\r\n            </Link>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\User List\\AddUser.jsx",["98"],"import React, { useState } from \"react\";\r\nimport { Button, FormGroup, Label, Input, Container, Form } from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport BaseUrl from \"../../../BaseUrl/BaseUrl\";\r\nconst AddUser = () => {\r\n  const [data, setData] = useState({\r\n    userName: \"\",\r\n    password: \"\",\r\n    status: false,\r\n  });\r\n  let history = useHistory();\r\n\r\n  const { userName, password } = data;\r\n  const onInputChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(`${BaseUrl.base}/api/users`, data);\r\n\r\n      setData({ userName: \"\", password: \"\" });\r\n      Swal.fire({\r\n        position: \"top\",\r\n        icon: \"success\",\r\n        title: \"Saved Successfully\",\r\n        showConfirmButton: true,\r\n        timer: 2000,\r\n      });\r\n      // history.push(\"/\")\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Form onSubmit={(e) => onSubmit(e)}>\r\n          <FormGroup>\r\n            <Label for=\"name\">User Name</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              id=\"name\"\r\n              placeholder=\"user name\"\r\n              value={userName}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"password\"\r\n              value={password}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>{\" \"}\r\n            <Link className=\"ml-2\" style={{ color: \"#FDA66D\" }} to=\"/\">\r\n              Back to home page\r\n            </Link>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\NotFound.jsx",[],"C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Product\\ProductList.jsx",["99","100","101","102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  Container,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport BaseUrl from \"../../../BaseUrl/BaseUrl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaRegEdit, FaTrashAlt, FaSearch } from \"react-icons/fa\";\r\n\r\nconst ProductList = () => {\r\n    const [products, setProducts] = useState([])\r\n\r\n    const getAllProducts = async () => {\r\n        await axios\r\n          .get(`${BaseUrl.base}/api/Products`)\r\n          .then((res) => {\r\n            setProducts(res.data);\r\n            console.log(\"products\",res.data);\r\n          })\r\n          .catch((err) => console.error(err));\r\n      };\r\n      useEffect(() => {\r\n        getAllProducts();\r\n      }, [])\r\n    return (\r\n        <>\r\n            <Container>\r\n      <h4 className=\"theme-title\">Products List</h4>\r\n        <InputGroup>\r\n          <Input />\r\n          <InputGroupAddon addonType=\"append\">\r\n            <Button color=\"secondary\">\r\n              <FaSearch />\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n        <br />\r\n        <Table bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>SL. No</th>\r\n              <th>Product Name</th>\r\n              <th>Condition</th>\r\n              <th>Price</th>\r\n              <th>Images</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{item.productName}</td>\r\n                <td>{item.condition}</td>\r\n                <td>{item.price}</td>\r\n                <td><img src={item.preview}/></td>\r\n                <td>\r\n                  <Link to={`/editUser/${item.userID}`}>\r\n                    <FaRegEdit size=\"1.5em\" color=\"DarkGray\" />\r\n                  </Link>{\" \"}\r\n                  <Button\r\n                    outline\r\n                    color=\"danger\"\r\n                    // onClick={() => {\r\n                    //   handleDelete(item.userID);\r\n                    // }}\r\n                  >\r\n                    <FaTrashAlt />\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductList\r\n","C:\\Users\\Nayon\\Desktop\\Final Project MobileBD\\MobileBD_Frontend\\mobilebd-frontend\\src\\Components\\Body\\Pages\\Product\\AddProduct.jsx",["104","105","106","107","108","109","110","111","112","113","114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Container,\r\n  FormText,\r\n  Media,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport BaseUrl from \"../../../BaseUrl/BaseUrl\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n// import {Noimg} from '../../../../../public/Images/No-img.png'\r\nconst productCondition = [\r\n  { lable: \"New\", value: 1 },\r\n  { lable: \"Used\", value: 2 },\r\n];\r\n\r\nconst defaultImg = \"/Images/No-img.png\";\r\n\r\nconst AddProduct = () => {\r\n  const [location, setLocation] = useState([]);\r\n  const [brand, setBrand] = useState([]);\r\n\r\n  const [postingPurpose, setPostingPurpose] = useState(\"\");\r\n  const [postdate, setpostDate] = useState(new Date());\r\n  const [fullname, setFullname] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [condition, setCondition] = useState(1);\r\n  const [locationVal, setLocationVal] = useState(1);\r\n  const [brandVal, setBrandVal] = useState(1);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const [imgPreview, setImgPreview] = useState(null);\r\n  const [image1File, setImage1File] = useState(null);\r\n  const [image1Name, setImage1Name] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [preview, setPreview] = useState(defaultImg);\r\n\r\n  //------------------------------dropdown API-------------------------------\r\n  const getAllLocation = async () => {\r\n    await axios\r\n      .get(`${BaseUrl.base}/api/OurLocations`)\r\n      .then((res) => {\r\n        setLocation(res.data);\r\n        console.log(\"data\", res.data);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const getAllBrand = async () => {\r\n    let productBrand = await axios.get(`${BaseUrl.base}/api/ProductBrand`);\r\n    setBrand(productBrand.data);\r\n    console.log(\"Brands\", productBrand.data);\r\n  };\r\n  //--------------------------------------------------------------------------\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let date = moment(postdate).format(\"YYYY-MM-DD HH:mm:ss\");\r\n    const formdata = new FormData();\r\n    formdata.append(\"name\", fullname);\r\n    formdata.append(\"gender\", gender);\r\n    formdata.append(\"number\", number);\r\n    formdata.append(\"email\", email);\r\n    formdata.append(\"productName\", productName);\r\n    formdata.append(\"condition\", condition);\r\n    formdata.append(\"postingPurpose\", postingPurpose);\r\n    formdata.append(\"price\", price);\r\n    formdata.append(\"address\", address);\r\n    formdata.append(\"postDate\", date);\r\n    formdata.append(\"description\", description);\r\n    formdata.append(\"imageFile\", imageFile);\r\n    formdata.append(\"productBrandID\", brandVal);\r\n    formdata.append(\"ourLocationID\", locationVal);\r\n\r\n    console.log(\"data\", formdata);\r\n    try {\r\n      await axios.post(`${BaseUrl.base}/api/Products`, formdata);\r\n\r\n      Swal.fire({\r\n        position: \"top\",\r\n        icon: \"success\",\r\n        title: \"Saved Successfully\",\r\n        showConfirmButton: true,\r\n        timer: 2000,\r\n      });\r\n      // history.push(\"/\")\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  // const handleImageChange = (e) => {\r\n\r\n  //   const selected = e.target.files[0];\r\n  //   console.log(\"selected\",selected);\r\n  //   console.log(\"selecteddata\",selected.name);\r\n  //   setImage1Name(selected.name)\r\n  //   const allowTypes = [\"image/png\", \"image/jpg\", \"image/jpeg\"];\r\n  //   if (selected && allowTypes.includes(selected.type)) {\r\n  //     console.log(\"Selected\");\r\n  //     let reader = new FileReader();\r\n  //     reader.onloadend = () => {\r\n  //       // setImage1File(reader.result);\r\n  //       setImage1File(selected);\r\n  //       console.log(\"reader.result\",reader.result);\r\n  //     };\r\n  //     reader.readAsDataURL(selected);\r\n  //   } else {\r\n  //     setError(true);\r\n  //     setImage1File(null)\r\n  //     console.log(\"File not supported\");\r\n  //   }\r\n  // };\r\n  const showPreview = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      console.log(\"aaaaaa\");\r\n      let imageFile = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = (x) => {\r\n        console.log(\"x\", x);\r\n        setImageFile(imageFile);\r\n        setPreview(x.target.result);\r\n      };\r\n      reader.readAsDataURL(imageFile);\r\n    } else {\r\n      setImageFile(null);\r\n      setPreview(defaultImg);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAllLocation();\r\n    getAllBrand();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h4 className=\"theme-title\">Product Form</h4>\r\n        <Form>\r\n          <div className=\"border-muted p-3\">\r\n            <h6 className=\"text-muted text-center\">\r\n              <u>Personal Info</u>\r\n            </h6>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"name\">Full Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={fullname}\r\n                    onChange={(e) => setFullname(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Label for=\"\">Gender</Label>\r\n                <FormGroup>\r\n                  <Row className=\"ml-2\">\r\n                    <Col md={6}>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"male\"\r\n                          checked={gender === \"Male\"}\r\n                          value=\"Male\"\r\n                          onChange={(e) => setGender(e.target.value)}\r\n                        />{\" \"}\r\n                        Male\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"female\"\r\n                          checked={gender === \"Female\"}\r\n                          value=\"Female\"\r\n                          onChange={(e) => setGender(e.target.value)}\r\n                        />{\" \"}\r\n                        Female\r\n                      </Label>\r\n                    </Col>\r\n                  </Row>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"number\">Number</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"number\"\r\n                    id=\"number\"\r\n                    value={number}\r\n                    onChange={(e) => setNumber(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"email\">Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"location\">Location</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"location\"\r\n                    id=\"location\"\r\n                    // defaultValue={locationVal}\r\n                    value={locationVal}\r\n                    onChange={(e) => setLocationVal(e.target.value)}\r\n                  >\r\n                    {location.map((item) => (\r\n                      <option value={item.ourLocationID}>\r\n                        {item.locationName}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"address\">Address</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <div className=\"border-muted p-3\">\r\n            <h6 className=\"text-muted text-center\">\r\n              <u>Product Info</u>\r\n            </h6>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"productName\">Product Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"productName\"\r\n                    id=\"productName\"\r\n                    value={productName}\r\n                    onChange={(e) => setProductName(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label for=\"brand\">Brand</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"brand\"\r\n                    id=\"brand\"\r\n                    // defaultValue={locationVal}\r\n                    value={brandVal}\r\n                    onChange={(e) => setBrandVal(e.target.value)}\r\n                  >\r\n                    {brand.map((item) => (\r\n                      <option value={item.productBrandID}>\r\n                        {item.brandName}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"condition\">Condition</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"condition\"\r\n                    id=\"condition\"\r\n                    value={condition}\r\n                    onChange={(e) => setCondition(e.target.value)}\r\n                  >\r\n                    {productCondition.map((item) => (\r\n                      <option value={item.value}>{item.lable}</option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"price\">Price</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    id=\"price\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <Label for=\"\">Posting Purpose</Label>\r\n                <FormGroup>\r\n                  <Row className=\"ml-2\">\r\n                    <Col md={4}>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"sell\"\r\n                          checked={postingPurpose === \"Sell\"}\r\n                          value=\"Sell\"\r\n                          onChange={(e) => setPostingPurpose(e.target.value)}\r\n                        />{\" \"}\r\n                        Sell\r\n                      </Label>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"radio\"\r\n                          name=\"sellAndExchange\"\r\n                          checked={postingPurpose === \"Sell & Exchange\"}\r\n                          value=\"Sell & Exchange\"\r\n                          onChange={(e) => setPostingPurpose(e.target.value)}\r\n                        />{\" \"}\r\n                        Sell & Exchange\r\n                      </Label>\r\n                    </Col>\r\n                  </Row>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"description\">Description</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"description\"\r\n                    id=\"description\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* <Row form>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 4 }}>\r\n                <FormGroup>\r\n                  {error && <p>File not supported</p>}\r\n                  <div\r\n                    className=\"image\"\r\n                    style={{\r\n                      background: image1File\r\n                        ? `url(\"${image1File}\") no-repeat center/cover`\r\n                        : \"#F8F8FF\",\r\n                    }}\r\n                  ></div>\r\n                  {!image1File && <></>}\r\n                  <Label for=\"exampleFile\" className=\"uploadBtn\">\r\n                    Upload Image\r\n                  </Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    id=\"exampleFile\"\r\n                    // hidden\r\n                    onChange={handleImageChange}\r\n                  />\r\n                  <FormText color=\"muted\">\r\n                    Please Upload Only png , jpg or jpeg\r\n                  </FormText>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row> */}\r\n            <Row form>\r\n              <Col sm=\"12\" md={{ size: 4, offset: 4 }}>\r\n                <FormGroup>\r\n                  {error && <p>File not supported</p>}\r\n                  <img src={preview} className=\"image\" />\r\n\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    id=\"exampleFile\"\r\n                    hidden\r\n                    accept=\"image/*\"\r\n                    onChange={showPreview}\r\n                  />\r\n                  <Label for=\"exampleFile\" className=\"uploadBtn\">\r\n                    Upload Image\r\n                  </Label>\r\n                  <FormText color=\"muted\">\r\n                    Please Upload Only png , jpg or jpeg\r\n                  </FormText>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <FormGroup>\r\n              <Button color=\"primary\" onClick={onSubmit}>\r\n                Submit\r\n              </Button>{\" \"}\r\n              <Link className=\"ml-2 theme-title\" to=\"/\">\r\n                Back to home page\r\n              </Link>\r\n            </FormGroup>\r\n          </div>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n",{"ruleId":"116","severity":1,"message":"117","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":19},{"ruleId":"116","severity":1,"message":"121","line":7,"column":21,"nodeType":"118","messageId":"119","endLine":7,"endColumn":24},{"ruleId":"116","severity":1,"message":"122","line":7,"column":26,"nodeType":"118","messageId":"119","endLine":7,"endColumn":29},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"116","severity":1,"message":"127","line":8,"column":3,"nodeType":"118","messageId":"119","endLine":8,"endColumn":7},{"ruleId":"116","severity":1,"message":"128","line":9,"column":3,"nodeType":"118","messageId":"119","endLine":9,"endColumn":12},{"ruleId":"116","severity":1,"message":"129","line":10,"column":3,"nodeType":"118","messageId":"119","endLine":10,"endColumn":8},{"ruleId":"116","severity":1,"message":"130","line":21,"column":10,"nodeType":"118","messageId":"119","endLine":21,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":92,"column":6,"nodeType":"133","endLine":92,"endColumn":8,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"135","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":15},{"ruleId":"123","replacedBy":"136"},{"ruleId":"125","replacedBy":"137"},{"ruleId":"131","severity":1,"message":"138","line":47,"column":6,"nodeType":"133","endLine":47,"endColumn":8,"suggestions":"139"},{"ruleId":"116","severity":1,"message":"140","line":13,"column":7,"nodeType":"118","messageId":"119","endLine":13,"endColumn":14},{"ruleId":"116","severity":1,"message":"141","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":12},{"ruleId":"116","severity":1,"message":"127","line":8,"column":3,"nodeType":"118","messageId":"119","endLine":8,"endColumn":7},{"ruleId":"116","severity":1,"message":"128","line":9,"column":3,"nodeType":"118","messageId":"119","endLine":9,"endColumn":12},{"ruleId":"116","severity":1,"message":"129","line":10,"column":3,"nodeType":"118","messageId":"119","endLine":10,"endColumn":8},{"ruleId":"142","severity":1,"message":"143","line":65,"column":21,"nodeType":"144","endLine":65,"endColumn":46},{"ruleId":"116","severity":1,"message":"145","line":12,"column":3,"nodeType":"118","messageId":"119","endLine":12,"endColumn":8},{"ruleId":"116","severity":1,"message":"146","line":14,"column":16,"nodeType":"118","messageId":"119","endLine":14,"endColumn":26},{"ruleId":"116","severity":1,"message":"147","line":18,"column":8,"nodeType":"118","messageId":"119","endLine":18,"endColumn":14},{"ruleId":"116","severity":1,"message":"148","line":33,"column":20,"nodeType":"118","messageId":"119","endLine":33,"endColumn":31},{"ruleId":"116","severity":1,"message":"149","line":46,"column":10,"nodeType":"118","messageId":"119","endLine":46,"endColumn":20},{"ruleId":"116","severity":1,"message":"150","line":46,"column":22,"nodeType":"118","messageId":"119","endLine":46,"endColumn":35},{"ruleId":"116","severity":1,"message":"151","line":47,"column":10,"nodeType":"118","messageId":"119","endLine":47,"endColumn":20},{"ruleId":"116","severity":1,"message":"152","line":47,"column":22,"nodeType":"118","messageId":"119","endLine":47,"endColumn":35},{"ruleId":"116","severity":1,"message":"153","line":48,"column":10,"nodeType":"118","messageId":"119","endLine":48,"endColumn":20},{"ruleId":"116","severity":1,"message":"154","line":48,"column":22,"nodeType":"118","messageId":"119","endLine":48,"endColumn":35},{"ruleId":"116","severity":1,"message":"155","line":49,"column":17,"nodeType":"118","messageId":"119","endLine":49,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":409,"column":19,"nodeType":"144","endLine":409,"endColumn":58},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-native-reassign",["156"],"no-negated-in-lhs",["157"],"'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'LoggerFactory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllUser'. Either include it or remove the dependency array.","ArrayExpression",["158"],"'Badge' is defined but never used.",["156"],["157"],"React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["159"],"'history' is assigned a value but never used.","'Swal' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Media' is defined but never used.","'useHistory' is defined but never used.","'Moment' is defined but never used.","'setpostDate' is assigned a value but never used.","'imgPreview' is assigned a value but never used.","'setImgPreview' is assigned a value but never used.","'image1File' is assigned a value but never used.","'setImage1File' is assigned a value but never used.","'image1Name' is assigned a value but never used.","'setImage1Name' is assigned a value but never used.","'setError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [getAllUser]",{"range":"164","text":"165"},"Update the dependencies array to be: [loadUser]",{"range":"166","text":"167"},[2559,2561],"[getAllUser]",[1359,1361],"[loadUser]"]